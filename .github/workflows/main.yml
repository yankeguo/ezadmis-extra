name: main

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      matrix:
        app_name:
          - ezadmis-deny-ns-deletion

    steps:
      - uses: actions/checkout@v3

      - name: docker-setup
        uses: docker/setup-buildx-action@v2

      - name: docker-login-ghcr
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: dockerhub login
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          username: yankeguo
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: dockerhub meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |-
            ghcr.io/${{ github.repository }}/${{ matrix.app_name }}
            yankeguo/${{matrix.app_name}}
          tags: |-
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=pr,enable=${{ github.event_name == 'pull_request' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}

      - name: dockerhub build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./Dockerfile
          build-args: "APP_NAME=${{matrix.app_name}}"
